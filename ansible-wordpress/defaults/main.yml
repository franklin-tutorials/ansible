---
# defaults file for ansible-wordpress role

# WordPress Core Settings
wp_version: "latest"  # WordPress version to install
wp_install_path: "/var/www/html"  # Installation path for WordPress files
wp_user: "www-data"  # System user for WordPress files (Debian/Ubuntu)
wp_group: "www-data" # System group for WordPress files (Debian/Ubuntu)

# WordPress Database Settings
wp_db_name: "wordpress"
wp_db_user: "example"
wp_db_password: "examplePW"  # CHANGE THIS IN PRODUCTION
wp_db_host: "localhost"
wp_db_root_password: "examplerootPW" # CHANGE THIS IN PRODUCTION

# Webserver Settings (Apache)
apache_server_admin: "admin@{{ ansible_fqdn | default('localhost') }}"
apache_port: "80"
# Note: The DocumentRoot in the apache config (e.g. /var/www/html/wordpress)
# might differ from wp_install_path if WordPress is installed in a subdirectory.
# For simplicity, this role currently assumes WordPress files are directly in apache_doc_root.
# If WordPress is in a subdirectory of wp_install_path (e.g. wp_install_path/wordpress),
# then apache_doc_root should point to that subdirectory.
apache_doc_root: "{{ wp_install_path }}"

# PHP Settings
php_memory_limit: "256M"
php_max_execution_time: "30"
php_upload_max_filesize: "32M"

# Package names - these can be overridden in vars for different OS distributions if needed
apache_package_name_debian: "apache2"
apache_package_name_redhat: "httpd"
php_package_names_debian:
  - "php"
  - "libapache2-mod-php"
  - "php-mysql"
php_package_names_redhat:
  - "php"
  - "php-mysqlnd" # For MariaDB/MySQL
mariadb_server_package_name_debian: "mariadb-server"
mariadb_server_package_name_redhat: "mariadb-server"
mariadb_client_package_name_debian: "mariadb-client" # Needed for mysql_user, mysql_db modules
mariadb_client_package_name_redhat: "mariadb"       # Often just 'mariadb' provides client tools

# Service names
apache_service_name_debian: "apache2"
apache_service_name_redhat: "httpd"
mariadb_service_name: "mariadb"

# Temporary download directory
wp_tmp_download_dir: "/tmp"

# WordPress Salts - It's highly recommended to override these with unique values
# Alternatively, the role will attempt to fetch them from the WordPress API
wp_auth_key: "put your unique phrase here"
wp_secure_auth_key: "put your unique phrase here"
wp_logged_in_key: "put your unique phrase here"
wp_nonce_key: "put your unique phrase here"
wp_auth_salt: "put your unique phrase here"
wp_secure_auth_salt: "put your unique phrase here"
wp_logged_in_salt: "put your unique phrase here"
wp_nonce_salt: "put your unique phrase here"
wp_db_table_prefix: "wp_"

# Path to store the downloaded WordPress archive
wp_archive_path: "{{ wp_tmp_download_dir }}/wordpress-{{ wp_version }}.zip"
wp_extracted_path: "{{ wp_tmp_download_dir }}/wordpress"
